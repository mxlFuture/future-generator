package {controllerPkgName};

import java.util.List;
import com.future.admin.server.dto.base.Result;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.future.admin.server.page.table.PageTableRequest;
import com.future.admin.server.page.table.PageTableHandler;
import com.future.admin.server.page.table.PageTableResponse;
import com.future.admin.server.page.table.PageTableHandler.CountHandler;
import com.future.admin.server.page.table.PageTableHandler.ListHandler;
import {daoPackageName}.{daoName};
import {beanPackageName}.{beanName};
import {servicePkgName}.{serviceName};

import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping("/{beanParamName}s")
public class {controllerName} {

    @Autowired
    private {serviceName} {beanParamName}Service;

    @PostMapping
    @ApiOperation(value = "保存")
    @RequiresPermissions("sys:{beanParamName}:add")
    public Object save(@RequestBody {beanName} {beanParamName}) {
        {beanParamName}Service.save{beanName}({beanParamName});
		{beanParamName}.setCreateBy(UserUtil.getCurrentUser().getId());
        return Result.getResult({beanParamName});
    }

    @GetMapping("/{id}")
    @ApiOperation(value = "根据id获取")
    public {beanName} get(@PathVariable Long id) {
        return {beanParamName}Service.get{beanName}(id);
    }

    @PutMapping
    @ApiOperation(value = "修改")
    @RequiresPermissions("sys:{beanParamName}:edit")
    public Object update(@RequestBody {beanName} {beanParamName}) {
    	{beanParamName}.setUpdateBy(UserUtil.getCurrentUser().getId());
        {beanParamName}Service.update{beanName}({beanParamName});
        return Result.getResult({beanParamName});
    }

    @GetMapping
    @ApiOperation(value = "列表")
    @RequiresPermissions("sys:{beanParamName}:query")
    public PageTableResponse list(PageTableRequest request) {
        return new PageTableHandler(new CountHandler() {

            @Override
            public int count(PageTableRequest request) {
                return {beanParamName}Service.count(request.getParams());
            }
        }, new ListHandler() {

            @Override
            public List<{beanName}> list(PageTableRequest request) {
                return {beanParamName}Service.list(request.getParams(), request.getOffset(), request.getLimit());
            }
        }).handle(request);
    }

    @DeleteMapping("/{id}")
    @ApiOperation(value = "删除")
    @RequiresPermissions("sys:{beanParamName}:del")
    public void delete(@PathVariable Long id) {
        {beanParamName}Service.delete{beanName}(id);
    }
}
